{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,iIAAiI,SAAS,0oCAA0oC,QAAQ,mD;;;;;;;;;;;;;;;;;;;;;ACAlvC;AAO1C;IALA;QAME,UAAK,GAAG,MAAM,CAAC;IA8BjB,CAAC;IAvBG,0BAAG,GAAH;QAEI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAExC,CAAC;IAED,gCAAS,GAAT;QAEI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAExC,CAAC;IAED,+BAAQ,GAAR;QAEI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAExC,CAAC;IAED,6BAAM,GAAN;QAEI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAExC,CAAC;IA9BQ,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CA+BxB;IAAD,mBAAC;CAAA;AA/BwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACE;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AChBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <br />\\n\\n    <div class=\\\"row\\\">\\n\\n        <h1>\\n\\n            Welcome to {{ title }}!\\n\\n        </h1>\\n\\n    </div>\\n\\n    <br />\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-md-6\\\">\\n\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"num1\\\" placeholder=\\\"Enter Number 1\\\" class=\\\"form-control\\\" />\\n\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\">\\n\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"num2\\\" placeholder=\\\"Enter Number 2\\\" class=\\\"form-control\\\" />\\n\\n        </div>\\n\\n    </div>\\n\\n    <br />\\n\\n    <div class=\\\"row text-center\\\">\\n\\n        <div class=\\\"col-md-3\\\">\\n\\n            <button class=\\\"btn btn-info\\\" (click)='add()'>Add</button>\\n\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n\\n            <button class=\\\"btn btn-info\\\" (click)='substract()'>Substract</button>\\n\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n\\n            <button class=\\\"btn btn-info\\\" (click)='multiply()'>Multiply</button>\\n\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n\\n            <button class=\\\"btn btn-info\\\" (click)='divide()'>Divide</button>\\n\\n        </div>\\n\\n    </div>\\n\\n    <br />\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-md-5 col-md-offset-4\\\">\\n\\n            <h2>Result = {{result}} </h2>\\n\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Calc';\n    num1: number;\n\n    num2: number;\n\n    result: number;\n\n    add() {\n\n        this.result = this.num1 + this.num2;\n\n    }\n\n    substract() {\n\n        this.result = this.num1 - this.num2;\n\n    }\n\n    multiply() {\n\n        this.result = this.num1 * this.num2;\n\n    }\n\n    divide() {\n\n        this.result = this.num1 % this.num2;\n\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}